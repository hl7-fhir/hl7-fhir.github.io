PREFIX fhir: <http://hl7.org/fhir/> 
PREFIX fhirvs: <http://hl7.org/fhir/ValueSet/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> 
BASE <http://hl7.org/fhir/shape/>

start=@<Contract> AND {fhir:nodeRole [fhir:treeRoot]}


# Contract
<Contract> CLOSED {
    a [fhir:Contract];
    fhir:nodeRole [fhir:treeRoot]?;
    fhir:Resource.id @<id>?;                # Logical id of this artifact
    fhir:Resource.meta @<Meta>?;            # Metadata about the resource
    fhir:Resource.implicitRules @<uri>?;    # A set of rules under which this 
                                            # content was created 
    fhir:Resource.language @<code>?;        # Language of the resource content
    fhir:DomainResource.text @<Narrative>?;  # Text summary of the resource, for 
                                            # human interpretation 
    fhir:DomainResource.contained @<Resource>*;  # Contained, inline Resources
    fhir:extension @<Extension>*;           # Additional Content defined by 
                                            # implementations 
    fhir:modifierExtension @<Extension>*;   # Extensions that cannot be ignored
    fhir:Contract.identifier @<Identifier>?;  # Contract identifier
    fhir:Contract.issued @<dateTime>?;      # When this Contract was issued
    fhir:Contract.applies @<Period>?;       # Effective time
    fhir:Contract.subject @<Reference>*;    # Contract Target Entity
    fhir:Contract.topic @<Reference>*;      # Context of the Contract
    fhir:Contract.authority @<Reference>*;  # Authority under which this 
                                            # Contract has standing 
    fhir:Contract.domain @<Reference>*;     # Domain in which this Contract 
                                            # applies 
    fhir:Contract.type @<CodeableConcept>?;  # Contract Type
    fhir:Contract.subType @<CodeableConcept>*;  # Contract Subtype
    fhir:Contract.action @<CodeableConcept>*;  # Contract Action
    fhir:Contract.actionReason @<CodeableConcept>*;  # Contract Action Reason
    fhir:Contract.agent @<Contract.agent>*;  # Contract Agent
    fhir:Contract.signer @<Contract.signer>*;  # Contract Signer
    fhir:Contract.valuedItem @<Contract.valuedItem>*;  # Contract Valued Item
    fhir:Contract.term @<Contract.term>*;   # Contract Term List
    (                                       # Binding Contract
        fhir:Contract.bindingAttachment @<Attachment>  |
        fhir:Contract.bindingReference @<Reference>  |
        fhir:Contract.bindingReference @<Reference>  |
        fhir:Contract.bindingReference @<Reference> 
    )?;
    fhir:Contract.friendly @<Contract.friendly>*;  # Contract Friendly Language
    fhir:Contract.legal @<Contract.legal>*;  # Contract Legal Language
    fhir:Contract.rule @<Contract.rule>*;   # Computable Contract Language
    fhir:index xsd:integer?                 # Relative position in a list
}

# Contract Friendly Language
<Contract.friendly> CLOSED {
    fhir:Element.id @<string>?;             # xml:id (or equivalent in JSON)
    fhir:extension @<Extension>*;           # Additional Content defined by 
                                            # implementations 
    fhir:modifierExtension @<Extension>*;   # Extensions that cannot be ignored
    (                                       # Easily comprehended representation 
                                            # of this Contract 
        fhir:Contract.friendly.contentAttachment @<Attachment>  |
        fhir:Contract.friendly.contentReference @<Reference>  |
        fhir:Contract.friendly.contentReference @<Reference>  |
        fhir:Contract.friendly.contentReference @<Reference> 
    );
    fhir:index xsd:integer?                 # Relative position in a list
}

# Contract Valued Item
<Contract.valuedItem> CLOSED {
    fhir:Element.id @<string>?;             # xml:id (or equivalent in JSON)
    fhir:extension @<Extension>*;           # Additional Content defined by 
                                            # implementations 
    fhir:modifierExtension @<Extension>*;   # Extensions that cannot be ignored
    (                                       # Contract Valued Item Type
        fhir:Contract.valuedItem.entityCodeableConcept @<CodeableConcept>  |
        fhir:Contract.valuedItem.entityReference @<Reference> 
    )?;
    fhir:Contract.valuedItem.identifier @<Identifier>?;  # Contract Valued Item Identifier
    fhir:Contract.valuedItem.effectiveTime @<dateTime>?;  # Contract Valued Item Effective Tiem
    fhir:Contract.valuedItem.quantity @<SimpleQuantity>?;  # Count of Contract Valued Items
    fhir:Contract.valuedItem.unitPrice @<Money>?;  # Contract Valued Item fee, charge, 
                                            # or cost 
    fhir:Contract.valuedItem.factor @<decimal>?;  # Contract Valued Item Price Scaling 
                                            # Factor 
    fhir:Contract.valuedItem.points @<decimal>?;  # Contract Valued Item Difficulty 
                                            # Scaling Factor 
    fhir:Contract.valuedItem.net @<Money>?;  # Total Contract Valued Item Value
    fhir:index xsd:integer?                 # Relative position in a list
}

# Contract Agent
<Contract.agent> CLOSED {
    fhir:Element.id @<string>?;             # xml:id (or equivalent in JSON)
    fhir:extension @<Extension>*;           # Additional Content defined by 
                                            # implementations 
    fhir:modifierExtension @<Extension>*;   # Extensions that cannot be ignored
    fhir:Contract.agent.actor               # Contract Agent Type
    (   @<ContractReference> OR
        @<DeviceReference> OR
        @<GroupReference> OR
        @<LocationReference> OR
        @<OrganizationReference> OR
        @<PatientReference> OR
        @<PractitionerReference> OR
        @<RelatedPersonReference> OR
        @<SubstanceReference>
    );
    fhir:Contract.agent.role @<CodeableConcept>*;  # Contract  Agent Role
    fhir:index xsd:integer?                 # Relative position in a list
}

# Contract Signer
<Contract.signer> CLOSED {
    fhir:Element.id @<string>?;             # xml:id (or equivalent in JSON)
    fhir:extension @<Extension>*;           # Additional Content defined by 
                                            # implementations 
    fhir:modifierExtension @<Extension>*;   # Extensions that cannot be ignored
    fhir:Contract.signer.type @<Coding>;    # Contract Signer Type
    fhir:Contract.signer.party              # Contract Signatory Party
    (   @<OrganizationReference> OR
        @<PatientReference> OR
        @<PractitionerReference> OR
        @<RelatedPersonReference>
    );
    fhir:Contract.signer.signature @<Signature>+;  # Contract Documentation Signature
    fhir:index xsd:integer?                 # Relative position in a list
}

# Contract Legal Language
<Contract.legal> CLOSED {
    fhir:Element.id @<string>?;             # xml:id (or equivalent in JSON)
    fhir:extension @<Extension>*;           # Additional Content defined by 
                                            # implementations 
    fhir:modifierExtension @<Extension>*;   # Extensions that cannot be ignored
    (                                       # Contract Legal Text
        fhir:Contract.legal.contentAttachment @<Attachment>  |
        fhir:Contract.legal.contentReference @<Reference>  |
        fhir:Contract.legal.contentReference @<Reference>  |
        fhir:Contract.legal.contentReference @<Reference> 
    );
    fhir:index xsd:integer?                 # Relative position in a list
}

# Contract Term List
<Contract.term> CLOSED {
    fhir:Element.id @<string>?;             # xml:id (or equivalent in JSON)
    fhir:extension @<Extension>*;           # Additional Content defined by 
                                            # implementations 
    fhir:modifierExtension @<Extension>*;   # Extensions that cannot be ignored
    fhir:Contract.term.identifier @<Identifier>?;  # Contract Term identifier
    fhir:Contract.term.issued @<dateTime>?;  # Contract Term Issue Date Time
    fhir:Contract.term.applies @<Period>?;  # Contract Term Effective Time
    fhir:Contract.term.type @<CodeableConcept>?;  # Contract Term Type
    fhir:Contract.term.subType @<CodeableConcept>?;  # Contract Term Subtype
    fhir:Contract.term.topic @<Reference>*;  # Context of the Contract term
    fhir:Contract.term.action @<CodeableConcept>*;  # Contract Term Action
    fhir:Contract.term.actionReason @<CodeableConcept>*;  # Contract Term Action Reason
    fhir:Contract.term.agent @<Contract.term.agent>*;  # Contract Term Agent List
    fhir:Contract.term.text @<string>?;     # Human readable Contract term text
    fhir:Contract.term.valuedItem @<Contract.term.valuedItem>*;  # Contract Term Valued Item
    fhir:Contract.term.group @<Contract.term>*;  # Nested Contract Term Group
    fhir:index xsd:integer?                 # Relative position in a list
}

# Computable Contract Language
<Contract.rule> CLOSED {
    fhir:Element.id @<string>?;             # xml:id (or equivalent in JSON)
    fhir:extension @<Extension>*;           # Additional Content defined by 
                                            # implementations 
    fhir:modifierExtension @<Extension>*;   # Extensions that cannot be ignored
    (                                       # Computable Contract Rules
        fhir:Contract.rule.contentAttachment @<Attachment>  |
        fhir:Contract.rule.contentReference @<Reference> 
    );
    fhir:index xsd:integer?                 # Relative position in a list
}

# Contract Term Agent List
<Contract.term.agent> CLOSED {
    fhir:Element.id @<string>?;             # xml:id (or equivalent in JSON)
    fhir:extension @<Extension>*;           # Additional Content defined by 
                                            # implementations 
    fhir:modifierExtension @<Extension>*;   # Extensions that cannot be ignored
    fhir:Contract.term.agent.actor          # Contract Term Agent List
    (   @<ContractReference> OR
        @<DeviceReference> OR
        @<GroupReference> OR
        @<LocationReference> OR
        @<OrganizationReference> OR
        @<PatientReference> OR
        @<PractitionerReference> OR
        @<RelatedPersonReference> OR
        @<SubstanceReference>
    );
    fhir:Contract.term.agent.role @<CodeableConcept>*;  # Contract Term Agent Role
    fhir:index xsd:integer?                 # Relative position in a list
}

# Contract Term Valued Item
<Contract.term.valuedItem> CLOSED {
    fhir:Element.id @<string>?;             # xml:id (or equivalent in JSON)
    fhir:extension @<Extension>*;           # Additional Content defined by 
                                            # implementations 
    fhir:modifierExtension @<Extension>*;   # Extensions that cannot be ignored
    (                                       # Contract Term Valued Item Type
        fhir:Contract.term.valuedItem.entityCodeableConcept @<CodeableConcept>  |
        fhir:Contract.term.valuedItem.entityReference @<Reference> 
    )?;
    fhir:Contract.term.valuedItem.identifier @<Identifier>?;  # Contract Term Valued Item 
                                            # Identifier 
    fhir:Contract.term.valuedItem.effectiveTime @<dateTime>?;  # Contract Term Valued Item 
                                            # Effective Tiem 
    fhir:Contract.term.valuedItem.quantity @<SimpleQuantity>?;  # Contract Term Valued Item Count
    fhir:Contract.term.valuedItem.unitPrice @<Money>?;  # Contract Term Valued Item fee, 
                                            # charge, or cost 
    fhir:Contract.term.valuedItem.factor @<decimal>?;  # Contract Term Valued Item Price 
                                            # Scaling Factor 
    fhir:Contract.term.valuedItem.points @<decimal>?;  # Contract Term Valued Item 
                                            # Difficulty Scaling Factor 
    fhir:Contract.term.valuedItem.net @<Money>?;  # Total Contract Term Valued Item 
                                            # Value 
    fhir:index xsd:integer?                 # Relative position in a list
}

#---------------------- Data Types -------------------

# Primitive Type dateTime
<dateTime> CLOSED {
    fhir:Element.id @<id>?;                 # xml:id (or equivalent in JSON)
    fhir:extension @<Extension>*;           # Additional Content defined by 
                                            # implementations 
    fhir:value xsd:gYear OR xsd:gYearMonth OR xsd:date OR xsd:dateTime?;  # Primitive value for dateTime
    fhir:index xsd:integer?                 # Relative position in a list
}

# Metadata about a resource
<Meta> CLOSED {
    fhir:Element.id @<string>?;             # xml:id (or equivalent in JSON)
    fhir:extension @<Extension>*;           # Additional Content defined by 
                                            # implementations 
    fhir:Meta.versionId @<id>?;             # Version specific identifier
    fhir:Meta.lastUpdated @<instant>?;      # When the resource version last 
                                            # changed 
    fhir:Meta.profile @<uri>*;              # Profiles this resource claims to 
                                            # conform to 
    fhir:Meta.security @<Coding>*;          # Security Labels applied to this 
                                            # resource 
    fhir:Meta.tag @<Coding>*;               # Tags applied to this resource
    fhir:index xsd:integer?                 # Relative position in a list
}

# Primitive Type code
<code> CLOSED {
    fhir:extension @<Extension>*;           # Additional Content defined by 
                                            # implementations 
    fhir:value xsd:string?;                 # Primitive value for code
    fhir:index xsd:integer?                 # Relative position in a list
}

# Primitive Type string
<string> CLOSED {
    fhir:Element.id @<id>?;                 # xml:id (or equivalent in JSON)
    fhir:extension @<Extension>*;           # Additional Content defined by 
                                            # implementations 
    fhir:value xsd:string MAXLENGTH 1048576?;  # Primitive value for string
    fhir:index xsd:integer?                 # Relative position in a list
}

# A reference from one resource to another
<Reference> CLOSED {
    fhir:link IRI?;
    fhir:Element.id @<string>?;             # xml:id (or equivalent in JSON)
    fhir:extension @<Extension>*;           # Additional Content defined by 
                                            # implementations 
    fhir:Reference.reference @<string>?;    # Literal reference, Relative, 
                                            # internal or absolute URL 
    fhir:Reference.identifier @<Identifier>?;  # Logical reference, when literal 
                                            # reference is not known 
    fhir:Reference.display @<string>?;      # Text alternative for the resource
    fhir:index xsd:integer?                 # Relative position in a list
}

# Base Resource
<Resource> {a .+;
    fhir:Resource.id @<id>?;                # Logical id of this artifact
    fhir:Resource.meta @<Meta>?;            # Metadata about the resource
    fhir:Resource.implicitRules @<uri>?;    # A set of rules under which this 
                                            # content was created 
    fhir:Resource.language @<code>?;        # Language of the resource content
    fhir:index xsd:integer?
}

# A fixed quantity (no comparator)
<SimpleQuantity> CLOSED {
    fhir:Element.id @<string>?;             # xml:id (or equivalent in JSON)
    fhir:extension @<Extension>*;           # Additional Content defined by 
                                            # implementations 
    fhir:Quantity.value @<decimal>?;        # Numerical value (with implicit 
                                            # precision) 
    fhir:Quantity.unit @<string>?;          # Unit representation
    fhir:Quantity.system @<uri>?;           # System that defines coded unit form
    fhir:Quantity.code @<code>?;            # Coded form of the unit
    fhir:index xsd:integer?                 # Relative position in a list
}

# Time range defined by start and end date/time
<Period> CLOSED {
    fhir:Element.id @<string>?;             # xml:id (or equivalent in JSON)
    fhir:extension @<Extension>*;           # Additional Content defined by 
                                            # implementations 
    fhir:Period.start @<dateTime>?;         # Starting time with inclusive 
                                            # boundary 
    fhir:Period.end @<dateTime>?;           # End time with inclusive boundary, 
                                            # if not ongoing 
    fhir:index xsd:integer?                 # Relative position in a list
}

# Content in a format defined elsewhere
<Attachment> CLOSED {
    fhir:Element.id @<string>?;             # xml:id (or equivalent in JSON)
    fhir:extension @<Extension>*;           # Additional Content defined by 
                                            # implementations 
    fhir:Attachment.contentType @<code>?;   # Mime type of the content, with 
                                            # charset etc. 
    fhir:Attachment.language @<code>?;      # Human language of the content 
                                            # (BCP-47) 
    fhir:Attachment.data @<base64Binary>?;  # Data inline, base64ed
    fhir:Attachment.url @<uri>?;            # Uri where the data can be found
    fhir:Attachment.size @<unsignedInt>?;   # Number of bytes of content (if url 
                                            # provided) 
    fhir:Attachment.hash @<base64Binary>?;  # Hash of the data (sha-1, base64ed)
    fhir:Attachment.title @<string>?;       # Label to display in place of the 
                                            # data 
    fhir:Attachment.creation @<dateTime>?;  # Date attachment was first created
    fhir:index xsd:integer?                 # Relative position in a list
}

# Primitive Type uri
<uri> CLOSED {
    fhir:Element.id @<id>?;                 # xml:id (or equivalent in JSON)
    fhir:extension @<Extension>*;           # Additional Content defined by 
                                            # implementations 
    fhir:value xsd:string?;                 # Primitive value for uri
    fhir:index xsd:integer?                 # Relative position in a list
}

<Extension> {fhir:extension @<Extension>*;
    fhir:index xsd:integer?
}

# An amount of economic utility in some recognised currency
<Money> CLOSED {
    fhir:Element.id @<string>?;             # xml:id (or equivalent in JSON)
    fhir:extension @<Extension>*;           # Additional Content defined by 
                                            # implementations 
    fhir:Quantity.value @<decimal>?;        # Numerical value (with implicit 
                                            # precision) 
    fhir:Quantity.comparator @<code> AND
    	{fhir:value @fhirvs:quantity-comparator}?;  # < | <= | >= | > - how to 
                                            # understand the value 
    fhir:Quantity.unit @<string>?;          # Unit representation
    fhir:Quantity.system @<uri>?;           # System that defines coded unit form
    fhir:Quantity.code @<code>?;            # Coded form of the unit
    fhir:index xsd:integer?                 # Relative position in a list
}

# An identifier intended for computation
<Identifier> CLOSED {
    fhir:Element.id @<string>?;             # xml:id (or equivalent in JSON)
    fhir:extension @<Extension>*;           # Additional Content defined by 
                                            # implementations 
    fhir:Identifier.use @<code> AND
    	{fhir:value @fhirvs:identifier-use}?;  # usual | official | temp | 
                                            # secondary (If known) 
    fhir:Identifier.type @<CodeableConcept>?;  # Description of identifier
    fhir:Identifier.system @<uri>?;         # The namespace for the identifier
    fhir:Identifier.value @<string>?;       # The value that is unique
    fhir:Identifier.period @<Period>?;      # Time period when id is/was valid 
                                            # for use 
    fhir:Identifier.assigner @<Reference>?;  # Organization that issued id (may 
                                            # be just text) 
    fhir:index xsd:integer?                 # Relative position in a list
}

# A human-readable formatted text, including images
<Narrative> CLOSED {
    fhir:Element.id @<string>?;             # xml:id (or equivalent in JSON)
    fhir:extension @<Extension>*;           # Additional Content defined by 
                                            # implementations 
    fhir:Narrative.status @<code> AND
    	{fhir:value @fhirvs:narrative-status};  # generated | extensions | 
                                            # additional | empty 
    fhir:Narrative.div xsd:string;          # Limited xhtml content
    fhir:index xsd:integer?                 # Relative position in a list
}

# A reference to a code defined by a terminology system
<Coding> CLOSED {
    fhir:concept IRI?;
    fhir:Element.id @<string>?;             # xml:id (or equivalent in JSON)
    fhir:extension @<Extension>*;           # Additional Content defined by 
                                            # implementations 
    fhir:Coding.system @<uri>?;             # Identity of the terminology system
    fhir:Coding.version @<string>?;         # Version of the system - if relevant
    fhir:Coding.code @<code>?;              # Symbol in syntax defined by the 
                                            # system 
    fhir:Coding.display @<string>?;         # Representation defined by the 
                                            # system 
    fhir:Coding.userSelected @<boolean>?;   # If this coding was chosen directly 
                                            # by the user 
    fhir:index xsd:integer?                 # Relative position in a list
}

# A digital Signature - XML DigSig, JWT, Graphical image of signature, etc.
<Signature> CLOSED {
    fhir:Element.id @<string>?;             # xml:id (or equivalent in JSON)
    fhir:extension @<Extension>*;           # Additional Content defined by 
                                            # implementations 
    fhir:Signature.type @<Coding>+;         # Indication of the reason the 
                                            # entity signed the object(s) 
    fhir:Signature.when @<instant>;         # When the signature was created
    (                                       # Who signed
        fhir:Signature.whoUri @<uri>  |
        fhir:Signature.whoReference @<Reference>  |
        fhir:Signature.whoReference @<Reference>  |
        fhir:Signature.whoReference @<Reference>  |
        fhir:Signature.whoReference @<Reference>  |
        fhir:Signature.whoReference @<Reference> 
    );
    (                                       # The party represented
        fhir:Signature.onBehalfOfUri @<uri>  |
        fhir:Signature.onBehalfOfReference @<Reference>  |
        fhir:Signature.onBehalfOfReference @<Reference>  |
        fhir:Signature.onBehalfOfReference @<Reference>  |
        fhir:Signature.onBehalfOfReference @<Reference>  |
        fhir:Signature.onBehalfOfReference @<Reference> 
    )?;
    fhir:Signature.contentType @<code>?;    # The technical format of the 
                                            # signature 
    fhir:Signature.blob @<base64Binary>?;   # The actual signature content (XML 
                                            # DigSig. JWT, picture, etc.) 
    fhir:index xsd:integer?                 # Relative position in a list
}

# Primitive Type id
<id> CLOSED {
    fhir:extension @<Extension>*;           # Additional Content defined by 
                                            # implementations 
    fhir:value xsd:string?;                 # Primitive value for id
    fhir:index xsd:integer?                 # Relative position in a list
}

# Primitive Type decimal
<decimal> CLOSED {
    fhir:Element.id @<id>?;                 # xml:id (or equivalent in JSON)
    fhir:extension @<Extension>*;           # Additional Content defined by 
                                            # implementations 
    fhir:value xsd:decimal?;                # Primitive value for decimal
    fhir:index xsd:integer?                 # Relative position in a list
}

# Concept - reference to a terminology or just  text
<CodeableConcept> CLOSED {
    fhir:concept IRI*;
    fhir:Element.id @<string>?;             # xml:id (or equivalent in JSON)
    fhir:extension @<Extension>*;           # Additional Content defined by 
                                            # implementations 
    fhir:CodeableConcept.coding @<Coding>*;  # Code defined by a terminology 
                                            # system 
    fhir:CodeableConcept.text @<string>?;   # Plain text representation of the 
                                            # concept 
    fhir:index xsd:integer?                 # Relative position in a list
}

# Primitive Type instant
<instant> CLOSED {
    fhir:Element.id @<id>?;                 # xml:id (or equivalent in JSON)
    fhir:extension @<Extension>*;           # Additional Content defined by 
                                            # implementations 
    fhir:value xsd:dateTime?;               # Primitive value for instant
    fhir:index xsd:integer?                 # Relative position in a list
}

# Primitive Type boolean
<boolean> CLOSED {
    fhir:Element.id @<id>?;                 # xml:id (or equivalent in JSON)
    fhir:extension @<Extension>*;           # Additional Content defined by 
                                            # implementations 
    fhir:value xsd:boolean?;                # Primitive value for boolean
    fhir:index xsd:integer?                 # Relative position in a list
}

# Primitive Type base64Binary
<base64Binary> CLOSED {
    fhir:Element.id @<id>?;                 # xml:id (or equivalent in JSON)
    fhir:extension @<Extension>*;           # Additional Content defined by 
                                            # implementations 
    fhir:value xsd:base64Binary?;           # Primitive value for base64Binary
    fhir:index xsd:integer?                 # Relative position in a list
}

# Primitive Type unsignedInt
<unsignedInt> CLOSED {
    fhir:extension @<Extension>*;           # Additional Content defined by 
                                            # implementations 
    fhir:value xsd:nonNegativeInteger?;     # Primitive value for unsignedInt
    fhir:index xsd:integer?                 # Relative position in a list
}

#---------------------- Reference Types -------------------

<PractitionerReference> CLOSED {
    fhir:Element.id @<id>?;
    fhir:extension @<Extension>*;
    fhir:link @<Practitioner> OR CLOSED {a fhir:Practitioner}?;
    fhir:Reference.reference @<string>?;
    fhir:Reference.display @<string>?;
    fhir:index xsd:integer?
}

<Practitioner> {
    a [fhir:Practitioner];
    fhir:nodeRole [fhir:treeRoot]?
}

<GroupReference> CLOSED {
    fhir:Element.id @<id>?;
    fhir:extension @<Extension>*;
    fhir:link @<Group> OR CLOSED {a fhir:Group}?;
    fhir:Reference.reference @<string>?;
    fhir:Reference.display @<string>?;
    fhir:index xsd:integer?
}

<Group> {
    a [fhir:Group];
    fhir:nodeRole [fhir:treeRoot]?
}

<OrganizationReference> CLOSED {
    fhir:Element.id @<id>?;
    fhir:extension @<Extension>*;
    fhir:link @<Organization> OR CLOSED {a fhir:Organization}?;
    fhir:Reference.reference @<string>?;
    fhir:Reference.display @<string>?;
    fhir:index xsd:integer?
}

<Organization> {
    a [fhir:Organization];
    fhir:nodeRole [fhir:treeRoot]?
}

<DeviceReference> CLOSED {
    fhir:Element.id @<id>?;
    fhir:extension @<Extension>*;
    fhir:link @<Device> OR CLOSED {a fhir:Device}?;
    fhir:Reference.reference @<string>?;
    fhir:Reference.display @<string>?;
    fhir:index xsd:integer?
}

<Device> {
    a [fhir:Device];
    fhir:nodeRole [fhir:treeRoot]?
}

<PatientReference> CLOSED {
    fhir:Element.id @<id>?;
    fhir:extension @<Extension>*;
    fhir:link @<Patient> OR CLOSED {a fhir:Patient}?;
    fhir:Reference.reference @<string>?;
    fhir:Reference.display @<string>?;
    fhir:index xsd:integer?
}

<Patient> {
    a [fhir:Patient];
    fhir:nodeRole [fhir:treeRoot]?
}

<SubstanceReference> CLOSED {
    fhir:Element.id @<id>?;
    fhir:extension @<Extension>*;
    fhir:link @<Substance> OR CLOSED {a fhir:Substance}?;
    fhir:Reference.reference @<string>?;
    fhir:Reference.display @<string>?;
    fhir:index xsd:integer?
}

<Substance> {
    a [fhir:Substance];
    fhir:nodeRole [fhir:treeRoot]?
}

<ContractReference> CLOSED {
    fhir:Element.id @<id>?;
    fhir:extension @<Extension>*;
    fhir:link @<Contract> OR CLOSED {a fhir:Contract}?;
    fhir:Reference.reference @<string>?;
    fhir:Reference.display @<string>?;
    fhir:index xsd:integer?
}

<Contract> {
    a [fhir:Contract];
    fhir:nodeRole [fhir:treeRoot]?
}

<RelatedPersonReference> CLOSED {
    fhir:Element.id @<id>?;
    fhir:extension @<Extension>*;
    fhir:link @<RelatedPerson> OR CLOSED {a fhir:RelatedPerson}?;
    fhir:Reference.reference @<string>?;
    fhir:Reference.display @<string>?;
    fhir:index xsd:integer?
}

<RelatedPerson> {
    a [fhir:RelatedPerson];
    fhir:nodeRole [fhir:treeRoot]?
}

<LocationReference> CLOSED {
    fhir:Element.id @<id>?;
    fhir:extension @<Extension>*;
    fhir:link @<Location> OR CLOSED {a fhir:Location}?;
    fhir:Reference.reference @<string>?;
    fhir:Reference.display @<string>?;
    fhir:index xsd:integer?
}

<Location> {
    a [fhir:Location];
    fhir:nodeRole [fhir:treeRoot]?
}

#---------------------- Value Sets ------------------------

# Identifies the purpose for this identifier, if known .
fhirvs:identifier-use ["usual" "official" "temp" "secondary"]

# How the Quantity should be understood and represented.
fhirvs:quantity-comparator ["<" "<=" ">=" ">"]

# The status of a resource narrative
fhirvs:narrative-status ["generated" "extensions" "additional" "empty"]
