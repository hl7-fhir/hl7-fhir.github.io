PREFIX fhir: <http://hl7.org/fhir/> 
PREFIX fhirvs: <http://hl7.org/fhir/ValueSet/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> 
BASE <http://hl7.org/fhir/shape/>

start=@<StructureDefinition> AND {fhir:nodeRole [fhir:treeRoot]}


# Structural Definition
<StructureDefinition> CLOSED {
    a [fhir:StructureDefinition];
    fhir:nodeRole [fhir:treeRoot]?;
    fhir:Resource.id @<id>?;                # Logical id of this artifact
    fhir:Resource.meta @<Meta>?;            # Metadata about the resource
    fhir:Resource.implicitRules @<uri>?;    # A set of rules under which this 
                                            # content was created 
    fhir:Resource.language @<code>?;        # Language of the resource content
    fhir:DomainResource.text @<Narrative>?;  # Text summary of the resource, for 
                                            # human interpretation 
    fhir:DomainResource.contained @<Resource>*;  # Contained, inline Resources
    fhir:extension @<Extension>*;           # Additional Content defined by 
                                            # implementations 
    fhir:modifierExtension @<Extension>*;   # Extensions that cannot be ignored
    fhir:StructureDefinition.url @<uri>;    # Logical uri to reference this 
                                            # structure definition (globally 
                                            # unique) 
    fhir:StructureDefinition.identifier @<Identifier>*;  # Additional identifier for the 
                                            # structure definition 
    fhir:StructureDefinition.version @<string>?;  # Business version of the structure 
                                            # definition 
    fhir:StructureDefinition.name @<string>;  # Name for this structure definition 
                                            # (Computer friendly) 
    fhir:StructureDefinition.title @<string>?;  # Name for this structure definition 
                                            # (Human friendly) 
    fhir:StructureDefinition.status @<code> AND
    	{fhir:value @fhirvs:publication-status};  # draft | active | retired
    fhir:StructureDefinition.experimental @<boolean>?;  # If for testing purposes, not real 
                                            # usage 
    fhir:StructureDefinition.publisher @<string>?;  # Name of the publisher 
                                            # (Organization or individual) 
    fhir:StructureDefinition.contact @<ContactDetail>*;  # Contact details for the publisher
    fhir:StructureDefinition.date @<dateTime>?;  # Date this was last changed
    fhir:StructureDefinition.description @<markdown>?;  # Natural language description of 
                                            # the structure definition 
    fhir:StructureDefinition.useContext @<UsageContext>*;  # Content intends to support these 
                                            # contexts 
    fhir:StructureDefinition.jurisdiction @<CodeableConcept>*;  # Intended jurisdiction for 
                                            # structure definition (if 
                                            # applicable) 
    fhir:StructureDefinition.purpose @<markdown>?;  # Why this structure definition is 
                                            # defined 
    fhir:StructureDefinition.copyright @<markdown>?;  # Use and/or publishing restrictions
    fhir:StructureDefinition.keyword @<Coding>*;  # Assist with indexing and finding
    fhir:StructureDefinition.fhirVersion @<id>?;  # FHIR Version this 
                                            # StructureDefinition targets 
    fhir:StructureDefinition.mapping @<StructureDefinition.mapping>*;  # External specification that the 
                                            # content is mapped to 
    fhir:StructureDefinition.kind @<code> AND
    	{fhir:value @fhirvs:structure-definition-kind};  # primitive-type | complex-type | 
                                            # resource | logical 
    fhir:StructureDefinition.abstract @<boolean>;  # Whether the structure is abstract
    fhir:StructureDefinition.contextType @<code> AND
    	{fhir:value @fhirvs:extension-context}?;  # resource | datatype | extension
    fhir:StructureDefinition.context @<string>*;  # Where the extension can be used in 
                                            # instances 
    fhir:StructureDefinition.contextInvariant @<string>*;  # FluentPath invariants - when the 
                                            # extension can be used 
    fhir:StructureDefinition.type @<code>;  # Type defined or constrained by 
                                            # this structure 
    fhir:StructureDefinition.baseDefinition @<uri>?;  # Definition that this type is 
                                            # constrained/specialized from 
    fhir:StructureDefinition.derivation @<code> AND
    	{fhir:value @fhirvs:type-derivation-rule}?;  # specialization | constraint - How 
                                            # relates to base definition 
    fhir:StructureDefinition.snapshot @<StructureDefinition.snapshot>?;  # Snapshot view of the structure
    fhir:StructureDefinition.differential @<StructureDefinition.differential>?;  # Differential view of the structure
    fhir:index xsd:integer?                 # Relative position in a list
}

# External specification that the content is mapped to
<StructureDefinition.mapping> CLOSED {
    fhir:Element.id @<string>?;             # xml:id (or equivalent in JSON)
    fhir:extension @<Extension>*;           # Additional Content defined by 
                                            # implementations 
    fhir:modifierExtension @<Extension>*;   # Extensions that cannot be ignored
    fhir:StructureDefinition.mapping.identity @<id>;  # Internal id when this mapping is 
                                            # used 
    fhir:StructureDefinition.mapping.uri @<uri>?;  # Identifies what this mapping 
                                            # refers to 
    fhir:StructureDefinition.mapping.name @<string>?;  # Names what this mapping refers to
    fhir:StructureDefinition.mapping.comments @<string>?;  # Versions, Issues, Scope 
                                            # limitations etc. 
    fhir:index xsd:integer?                 # Relative position in a list
}

# Snapshot view of the structure
<StructureDefinition.snapshot> CLOSED {
    fhir:Element.id @<string>?;             # xml:id (or equivalent in JSON)
    fhir:extension @<Extension>*;           # Additional Content defined by 
                                            # implementations 
    fhir:modifierExtension @<Extension>*;   # Extensions that cannot be ignored
    fhir:StructureDefinition.snapshot.element @<ElementDefinition>+;  # Definition of elements in the 
                                            # resource (if no 
                                            # StructureDefinition) 
    fhir:index xsd:integer?                 # Relative position in a list
}

# Differential view of the structure
<StructureDefinition.differential> CLOSED {
    fhir:Element.id @<string>?;             # xml:id (or equivalent in JSON)
    fhir:extension @<Extension>*;           # Additional Content defined by 
                                            # implementations 
    fhir:modifierExtension @<Extension>*;   # Extensions that cannot be ignored
    fhir:StructureDefinition.differential.element @<ElementDefinition>+;  # Definition of elements in the 
                                            # resource (if no 
                                            # StructureDefinition) 
    fhir:index xsd:integer?                 # Relative position in a list
}

#---------------------- Data Types -------------------

# Primitive Type dateTime
<dateTime> CLOSED {
    fhir:Element.id @<id>?;                 # xml:id (or equivalent in JSON)
    fhir:extension @<Extension>*;           # Additional Content defined by 
                                            # implementations 
    fhir:value xsd:gYear OR xsd:gYearMonth OR xsd:date OR xsd:dateTime?;  # Primitive value for dateTime
    fhir:index xsd:integer?                 # Relative position in a list
}

# Metadata about a resource
<Meta> CLOSED {
    fhir:Element.id @<string>?;             # xml:id (or equivalent in JSON)
    fhir:extension @<Extension>*;           # Additional Content defined by 
                                            # implementations 
    fhir:Meta.versionId @<id>?;             # Version specific identifier
    fhir:Meta.lastUpdated @<instant>?;      # When the resource version last 
                                            # changed 
    fhir:Meta.profile @<uri>*;              # Profiles this resource claims to 
                                            # conform to 
    fhir:Meta.security @<Coding>*;          # Security Labels applied to this 
                                            # resource 
    fhir:Meta.tag @<Coding>*;               # Tags applied to this resource
    fhir:index xsd:integer?                 # Relative position in a list
}

# Primitive Type code
<code> CLOSED {
    fhir:extension @<Extension>*;           # Additional Content defined by 
                                            # implementations 
    fhir:value xsd:string?;                 # Primitive value for code
    fhir:index xsd:integer?                 # Relative position in a list
}

# Primitive Type string
<string> CLOSED {
    fhir:Element.id @<id>?;                 # xml:id (or equivalent in JSON)
    fhir:extension @<Extension>*;           # Additional Content defined by 
                                            # implementations 
    fhir:value xsd:string MAXLENGTH 1048576?;  # Primitive value for string
    fhir:index xsd:integer?                 # Relative position in a list
}

# Base Resource
<Resource> {a .+;
    fhir:Resource.id @<id>?;                # Logical id of this artifact
    fhir:Resource.meta @<Meta>?;            # Metadata about the resource
    fhir:Resource.implicitRules @<uri>?;    # A set of rules under which this 
                                            # content was created 
    fhir:Resource.language @<code>?;        # Language of the resource content
    fhir:index xsd:integer?
}

# Primitive Type uri
<uri> CLOSED {
    fhir:Element.id @<id>?;                 # xml:id (or equivalent in JSON)
    fhir:extension @<Extension>*;           # Additional Content defined by 
                                            # implementations 
    fhir:value xsd:string?;                 # Primitive value for uri
    fhir:index xsd:integer?                 # Relative position in a list
}

<Extension> {fhir:extension @<Extension>*;
    fhir:index xsd:integer?
}

# Contact information
<ContactDetail> CLOSED {
    fhir:Element.id @<string>?;             # xml:id (or equivalent in JSON)
    fhir:extension @<Extension>*;           # Additional Content defined by 
                                            # implementations 
    fhir:ContactDetail.name @<string>?;     # Name of an individual to contact
    fhir:ContactDetail.telecom @<ContactPoint>*;  # Contact details for individual or 
                                            # organization 
    fhir:index xsd:integer?                 # Relative position in a list
}

# An identifier intended for computation
<Identifier> CLOSED {
    fhir:Element.id @<string>?;             # xml:id (or equivalent in JSON)
    fhir:extension @<Extension>*;           # Additional Content defined by 
                                            # implementations 
    fhir:Identifier.use @<code> AND
    	{fhir:value @fhirvs:identifier-use}?;  # usual | official | temp | 
                                            # secondary (If known) 
    fhir:Identifier.type @<CodeableConcept>?;  # Description of identifier
    fhir:Identifier.system @<uri>?;         # The namespace for the identifier
    fhir:Identifier.value @<string>?;       # The value that is unique
    fhir:Identifier.period @<Period>?;      # Time period when id is/was valid 
                                            # for use 
    fhir:Identifier.assigner @<Reference>?;  # Organization that issued id (may 
                                            # be just text) 
    fhir:index xsd:integer?                 # Relative position in a list
}

# Primitive Type boolean
<boolean> CLOSED {
    fhir:Element.id @<id>?;                 # xml:id (or equivalent in JSON)
    fhir:extension @<Extension>*;           # Additional Content defined by 
                                            # implementations 
    fhir:value xsd:boolean?;                # Primitive value for boolean
    fhir:index xsd:integer?                 # Relative position in a list
}

# A human-readable formatted text, including images
<Narrative> CLOSED {
    fhir:Element.id @<string>?;             # xml:id (or equivalent in JSON)
    fhir:extension @<Extension>*;           # Additional Content defined by 
                                            # implementations 
    fhir:Narrative.status @<code> AND
    	{fhir:value @fhirvs:narrative-status};  # generated | extensions | 
                                            # additional | empty 
    fhir:Narrative.div xsd:string;          # Limited xhtml content
    fhir:index xsd:integer?                 # Relative position in a list
}

# Describes the context of use for a knowledge resource
<UsageContext> CLOSED {
    fhir:Element.id @<string>?;             # xml:id (or equivalent in JSON)
    fhir:extension @<Extension>*;           # Additional Content defined by 
                                            # implementations 
    fhir:UsageContext.code @<Coding>;       # Type of context being specified
    (                                       # Value that defines the context
        fhir:UsageContext.valueCodeableConcept @<CodeableConcept>  |
        fhir:UsageContext.valueQuantity @<Quantity>  |
        fhir:UsageContext.valueRange @<Range> 
    );
    fhir:index xsd:integer?                 # Relative position in a list
}

# A reference to a code defined by a terminology system
<Coding> CLOSED {
    fhir:concept IRI?;
    fhir:Element.id @<string>?;             # xml:id (or equivalent in JSON)
    fhir:extension @<Extension>*;           # Additional Content defined by 
                                            # implementations 
    fhir:Coding.system @<uri>?;             # Identity of the terminology system
    fhir:Coding.version @<string>?;         # Version of the system - if relevant
    fhir:Coding.code @<code>?;              # Symbol in syntax defined by the 
                                            # system 
    fhir:Coding.display @<string>?;         # Representation defined by the 
                                            # system 
    fhir:Coding.userSelected @<boolean>?;   # If this coding was chosen directly 
                                            # by the user 
    fhir:index xsd:integer?                 # Relative position in a list
}

# Primitive Type markdown
<markdown> CLOSED {
    fhir:extension @<Extension>*;           # Additional Content defined by 
                                            # implementations 
    fhir:value xsd:string?;                 # Primitive value for markdown
    fhir:index xsd:integer?                 # Relative position in a list
}

# Primitive Type id
<id> CLOSED {
    fhir:extension @<Extension>*;           # Additional Content defined by 
                                            # implementations 
    fhir:value xsd:string?;                 # Primitive value for id
    fhir:index xsd:integer?                 # Relative position in a list
}

# Definition of an element in a resource or extension
<ElementDefinition> CLOSED {
    fhir:Element.id @<string>?;             # xml:id (or equivalent in JSON)
    fhir:extension @<Extension>*;           # Additional Content defined by 
                                            # implementations 
    fhir:ElementDefinition.path @<string>;  # Path of the element in the 
                                            # heirarchy of elements 
    fhir:ElementDefinition.representation @<code> AND
    	{fhir:value @fhirvs:property-representation}*;  # xmlAttr | xmlText | typeAttr | 
                                            # cdaText | xhtml 
    fhir:ElementDefinition.sliceName @<string>?;  # Name for this particular element 
                                            # (in a set of slices) 
    fhir:ElementDefinition.label @<string>?;  # Name for element to display with 
                                            # or prompt for element 
    fhir:ElementDefinition.code @<Coding>*;  # Defining code
    fhir:ElementDefinition.slicing @<ElementDefinition.slicing>?;  # This element is sliced - slices 
                                            # follow 
    fhir:ElementDefinition.short @<string>?;  # Concise definition for xml 
                                            # presentation 
    fhir:ElementDefinition.definition @<markdown>?;  # Full formal definition as 
                                            # narrative text 
    fhir:ElementDefinition.comments @<markdown>?;  # Comments about the use of this 
                                            # element 
    fhir:ElementDefinition.requirements @<markdown>?;  # Why this resource has been created
    fhir:ElementDefinition.alias @<string>*;  # Other names
    fhir:ElementDefinition.min @<integer>?;  # Minimum Cardinality
    fhir:ElementDefinition.max @<string>?;  # Maximum Cardinality (a number or *)
    fhir:ElementDefinition.base @<ElementDefinition.base>?;  # Base definition information for 
                                            # tools 
    fhir:ElementDefinition.contentReference @<uri>?;  # Reference to definition of content 
                                            # for the element 
    fhir:ElementDefinition.type @<ElementDefinition.type>*;  # Data type and Profile for this 
                                            # element 
    (                                       # Specified value if missing from 
                                            # instance 
        fhir:ElementDefinition.defaultValueBase64Binary @<base64Binary>  |
        fhir:ElementDefinition.defaultValueBoolean @<boolean>  |
        fhir:ElementDefinition.defaultValueCode @<code>  |
        fhir:ElementDefinition.defaultValueDate @<date>  |
        fhir:ElementDefinition.defaultValueDateTime @<dateTime>  |
        fhir:ElementDefinition.defaultValueDecimal @<decimal>  |
        fhir:ElementDefinition.defaultValueId @<id>  |
        fhir:ElementDefinition.defaultValueInstant @<instant>  |
        fhir:ElementDefinition.defaultValueInteger @<integer>  |
        fhir:ElementDefinition.defaultValueMarkdown @<markdown>  |
        fhir:ElementDefinition.defaultValueOid @<oid>  |
        fhir:ElementDefinition.defaultValuePositiveInt @<positiveInt>  |
        fhir:ElementDefinition.defaultValueString @<string>  |
        fhir:ElementDefinition.defaultValueTime @<time>  |
        fhir:ElementDefinition.defaultValueUnsignedInt @<unsignedInt>  |
        fhir:ElementDefinition.defaultValueUri @<uri>  |
        fhir:ElementDefinition.defaultValueAddress @<Address>  |
        fhir:ElementDefinition.defaultValueAge @<Age>  |
        fhir:ElementDefinition.defaultValueAnnotation @<Annotation>  |
        fhir:ElementDefinition.defaultValueAttachment @<Attachment>  |
        fhir:ElementDefinition.defaultValueCodeableConcept @<CodeableConcept>  |
        fhir:ElementDefinition.defaultValueCoding @<Coding>  |
        fhir:ElementDefinition.defaultValueContactPoint @<ContactPoint>  |
        fhir:ElementDefinition.defaultValueCount @<Count>  |
        fhir:ElementDefinition.defaultValueDistance @<Distance>  |
        fhir:ElementDefinition.defaultValueDuration @<Duration>  |
        fhir:ElementDefinition.defaultValueHumanName @<HumanName>  |
        fhir:ElementDefinition.defaultValueIdentifier @<Identifier>  |
        fhir:ElementDefinition.defaultValueMoney @<Money>  |
        fhir:ElementDefinition.defaultValuePeriod @<Period>  |
        fhir:ElementDefinition.defaultValueQuantity @<Quantity>  |
        fhir:ElementDefinition.defaultValueRange @<Range>  |
        fhir:ElementDefinition.defaultValueRatio @<Ratio>  |
        fhir:ElementDefinition.defaultValueReference @<Reference>  |
        fhir:ElementDefinition.defaultValueSampledData @<SampledData>  |
        fhir:ElementDefinition.defaultValueSignature @<Signature>  |
        fhir:ElementDefinition.defaultValueTiming @<Timing>  |
        fhir:ElementDefinition.defaultValueMeta @<Meta> 
    )?;
    fhir:ElementDefinition.meaningWhenMissing @<markdown>?;  # Implicit meaning when this element 
                                            # is missing 
    (                                       # Value must be exactly this
        fhir:ElementDefinition.fixedBase64Binary @<base64Binary>  |
        fhir:ElementDefinition.fixedBoolean @<boolean>  |
        fhir:ElementDefinition.fixedCode @<code>  |
        fhir:ElementDefinition.fixedDate @<date>  |
        fhir:ElementDefinition.fixedDateTime @<dateTime>  |
        fhir:ElementDefinition.fixedDecimal @<decimal>  |
        fhir:ElementDefinition.fixedId @<id>  |
        fhir:ElementDefinition.fixedInstant @<instant>  |
        fhir:ElementDefinition.fixedInteger @<integer>  |
        fhir:ElementDefinition.fixedMarkdown @<markdown>  |
        fhir:ElementDefinition.fixedOid @<oid>  |
        fhir:ElementDefinition.fixedPositiveInt @<positiveInt>  |
        fhir:ElementDefinition.fixedString @<string>  |
        fhir:ElementDefinition.fixedTime @<time>  |
        fhir:ElementDefinition.fixedUnsignedInt @<unsignedInt>  |
        fhir:ElementDefinition.fixedUri @<uri>  |
        fhir:ElementDefinition.fixedAddress @<Address>  |
        fhir:ElementDefinition.fixedAge @<Age>  |
        fhir:ElementDefinition.fixedAnnotation @<Annotation>  |
        fhir:ElementDefinition.fixedAttachment @<Attachment>  |
        fhir:ElementDefinition.fixedCodeableConcept @<CodeableConcept>  |
        fhir:ElementDefinition.fixedCoding @<Coding>  |
        fhir:ElementDefinition.fixedContactPoint @<ContactPoint>  |
        fhir:ElementDefinition.fixedCount @<Count>  |
        fhir:ElementDefinition.fixedDistance @<Distance>  |
        fhir:ElementDefinition.fixedDuration @<Duration>  |
        fhir:ElementDefinition.fixedHumanName @<HumanName>  |
        fhir:ElementDefinition.fixedIdentifier @<Identifier>  |
        fhir:ElementDefinition.fixedMoney @<Money>  |
        fhir:ElementDefinition.fixedPeriod @<Period>  |
        fhir:ElementDefinition.fixedQuantity @<Quantity>  |
        fhir:ElementDefinition.fixedRange @<Range>  |
        fhir:ElementDefinition.fixedRatio @<Ratio>  |
        fhir:ElementDefinition.fixedReference @<Reference>  |
        fhir:ElementDefinition.fixedSampledData @<SampledData>  |
        fhir:ElementDefinition.fixedSignature @<Signature>  |
        fhir:ElementDefinition.fixedTiming @<Timing>  |
        fhir:ElementDefinition.fixedMeta @<Meta> 
    )?;
    (                                       # Value must have at least these 
                                            # property values 
        fhir:ElementDefinition.patternBase64Binary @<base64Binary>  |
        fhir:ElementDefinition.patternBoolean @<boolean>  |
        fhir:ElementDefinition.patternCode @<code>  |
        fhir:ElementDefinition.patternDate @<date>  |
        fhir:ElementDefinition.patternDateTime @<dateTime>  |
        fhir:ElementDefinition.patternDecimal @<decimal>  |
        fhir:ElementDefinition.patternId @<id>  |
        fhir:ElementDefinition.patternInstant @<instant>  |
        fhir:ElementDefinition.patternInteger @<integer>  |
        fhir:ElementDefinition.patternMarkdown @<markdown>  |
        fhir:ElementDefinition.patternOid @<oid>  |
        fhir:ElementDefinition.patternPositiveInt @<positiveInt>  |
        fhir:ElementDefinition.patternString @<string>  |
        fhir:ElementDefinition.patternTime @<time>  |
        fhir:ElementDefinition.patternUnsignedInt @<unsignedInt>  |
        fhir:ElementDefinition.patternUri @<uri>  |
        fhir:ElementDefinition.patternAddress @<Address>  |
        fhir:ElementDefinition.patternAge @<Age>  |
        fhir:ElementDefinition.patternAnnotation @<Annotation>  |
        fhir:ElementDefinition.patternAttachment @<Attachment>  |
        fhir:ElementDefinition.patternCodeableConcept @<CodeableConcept>  |
        fhir:ElementDefinition.patternCoding @<Coding>  |
        fhir:ElementDefinition.patternContactPoint @<ContactPoint>  |
        fhir:ElementDefinition.patternCount @<Count>  |
        fhir:ElementDefinition.patternDistance @<Distance>  |
        fhir:ElementDefinition.patternDuration @<Duration>  |
        fhir:ElementDefinition.patternHumanName @<HumanName>  |
        fhir:ElementDefinition.patternIdentifier @<Identifier>  |
        fhir:ElementDefinition.patternMoney @<Money>  |
        fhir:ElementDefinition.patternPeriod @<Period>  |
        fhir:ElementDefinition.patternQuantity @<Quantity>  |
        fhir:ElementDefinition.patternRange @<Range>  |
        fhir:ElementDefinition.patternRatio @<Ratio>  |
        fhir:ElementDefinition.patternReference @<Reference>  |
        fhir:ElementDefinition.patternSampledData @<SampledData>  |
        fhir:ElementDefinition.patternSignature @<Signature>  |
        fhir:ElementDefinition.patternTiming @<Timing>  |
        fhir:ElementDefinition.patternMeta @<Meta> 
    )?;
    (                                       # Example value (as defined for type)
        fhir:ElementDefinition.exampleBase64Binary @<base64Binary>  |
        fhir:ElementDefinition.exampleBoolean @<boolean>  |
        fhir:ElementDefinition.exampleCode @<code>  |
        fhir:ElementDefinition.exampleDate @<date>  |
        fhir:ElementDefinition.exampleDateTime @<dateTime>  |
        fhir:ElementDefinition.exampleDecimal @<decimal>  |
        fhir:ElementDefinition.exampleId @<id>  |
        fhir:ElementDefinition.exampleInstant @<instant>  |
        fhir:ElementDefinition.exampleInteger @<integer>  |
        fhir:ElementDefinition.exampleMarkdown @<markdown>  |
        fhir:ElementDefinition.exampleOid @<oid>  |
        fhir:ElementDefinition.examplePositiveInt @<positiveInt>  |
        fhir:ElementDefinition.exampleString @<string>  |
        fhir:ElementDefinition.exampleTime @<time>  |
        fhir:ElementDefinition.exampleUnsignedInt @<unsignedInt>  |
        fhir:ElementDefinition.exampleUri @<uri>  |
        fhir:ElementDefinition.exampleAddress @<Address>  |
        fhir:ElementDefinition.exampleAge @<Age>  |
        fhir:ElementDefinition.exampleAnnotation @<Annotation>  |
        fhir:ElementDefinition.exampleAttachment @<Attachment>  |
        fhir:ElementDefinition.exampleCodeableConcept @<CodeableConcept>  |
        fhir:ElementDefinition.exampleCoding @<Coding>  |
        fhir:ElementDefinition.exampleContactPoint @<ContactPoint>  |
        fhir:ElementDefinition.exampleCount @<Count>  |
        fhir:ElementDefinition.exampleDistance @<Distance>  |
        fhir:ElementDefinition.exampleDuration @<Duration>  |
        fhir:ElementDefinition.exampleHumanName @<HumanName>  |
        fhir:ElementDefinition.exampleIdentifier @<Identifier>  |
        fhir:ElementDefinition.exampleMoney @<Money>  |
        fhir:ElementDefinition.examplePeriod @<Period>  |
        fhir:ElementDefinition.exampleQuantity @<Quantity>  |
        fhir:ElementDefinition.exampleRange @<Range>  |
        fhir:ElementDefinition.exampleRatio @<Ratio>  |
        fhir:ElementDefinition.exampleReference @<Reference>  |
        fhir:ElementDefinition.exampleSampledData @<SampledData>  |
        fhir:ElementDefinition.exampleSignature @<Signature>  |
        fhir:ElementDefinition.exampleTiming @<Timing>  |
        fhir:ElementDefinition.exampleMeta @<Meta> 
    )?;
    (                                       # Minimum Allowed Value (for some 
                                            # types) 
        fhir:ElementDefinition.minValueDate @<date>  |
        fhir:ElementDefinition.minValueDateTime @<dateTime>  |
        fhir:ElementDefinition.minValueInstant @<instant>  |
        fhir:ElementDefinition.minValueTime @<time>  |
        fhir:ElementDefinition.minValueDecimal @<decimal>  |
        fhir:ElementDefinition.minValueInteger @<integer>  |
        fhir:ElementDefinition.minValuePositiveInt @<positiveInt>  |
        fhir:ElementDefinition.minValueUnsignedInt @<unsignedInt>  |
        fhir:ElementDefinition.minValueQuantity @<Quantity> 
    )?;
    (                                       # Maximum Allowed Value (for some 
                                            # types) 
        fhir:ElementDefinition.maxValueDate @<date>  |
        fhir:ElementDefinition.maxValueDateTime @<dateTime>  |
        fhir:ElementDefinition.maxValueInstant @<instant>  |
        fhir:ElementDefinition.maxValueTime @<time>  |
        fhir:ElementDefinition.maxValueDecimal @<decimal>  |
        fhir:ElementDefinition.maxValueInteger @<integer>  |
        fhir:ElementDefinition.maxValuePositiveInt @<positiveInt>  |
        fhir:ElementDefinition.maxValueUnsignedInt @<unsignedInt>  |
        fhir:ElementDefinition.maxValueQuantity @<Quantity> 
    )?;
    fhir:ElementDefinition.maxLength @<integer>?;  # Max length for strings
    fhir:ElementDefinition.condition @<id>*;  # Reference to invariant about 
                                            # presence 
    fhir:ElementDefinition.constraint @<ElementDefinition.constraint>*;  # Condition that must evaluate to 
                                            # true 
    fhir:ElementDefinition.mustSupport @<boolean>?;  # If the element must supported
    fhir:ElementDefinition.isModifier @<boolean>?;  # If this modifies the meaning of 
                                            # other elements 
    fhir:ElementDefinition.isSummary @<boolean>?;  # Include when _summary = true?
    fhir:ElementDefinition.binding @<ElementDefinition.binding>?;  # ValueSet details if this is coded
    fhir:ElementDefinition.mapping @<ElementDefinition.mapping>*;  # Map element to another set of 
                                            # definitions 
    fhir:index xsd:integer?                 # Relative position in a list
}

# Concept - reference to a terminology or just  text
<CodeableConcept> CLOSED {
    fhir:concept IRI*;
    fhir:Element.id @<string>?;             # xml:id (or equivalent in JSON)
    fhir:extension @<Extension>*;           # Additional Content defined by 
                                            # implementations 
    fhir:CodeableConcept.coding @<Coding>*;  # Code defined by a terminology 
                                            # system 
    fhir:CodeableConcept.text @<string>?;   # Plain text representation of the 
                                            # concept 
    fhir:index xsd:integer?                 # Relative position in a list
}

# Primitive Type date
<date> CLOSED {
    fhir:Element.id @<id>?;                 # xml:id (or equivalent in JSON)
    fhir:extension @<Extension>*;           # Additional Content defined by 
                                            # implementations 
    fhir:value xsd:gYear OR xsd:gYearMonth OR xsd:date?;  # Primitive value for date
    fhir:index xsd:integer?                 # Relative position in a list
}

# An address expressed using postal conventions (as opposed to GPS or other location definition formats)
<Address> CLOSED {
    fhir:Element.id @<string>?;             # xml:id (or equivalent in JSON)
    fhir:extension @<Extension>*;           # Additional Content defined by 
                                            # implementations 
    fhir:Address.use @<code> AND
    	{fhir:value @fhirvs:address-use}?;  # home | work | temp | old - purpose 
                                            # of this address 
    fhir:Address.type @<code> AND
    	{fhir:value @fhirvs:address-type}?;  # postal | physical | both
    fhir:Address.text @<string>?;           # Text representation of the address
    fhir:Address.line @<string>*;           # Street name, number, direction & 
                                            # P.O. Box etc. 
    fhir:Address.city @<string>?;           # Name of city, town etc.
    fhir:Address.district @<string>?;       # District name (aka county)
    fhir:Address.state @<string>?;          # Sub-unit of country (abbreviations 
                                            # ok) 
    fhir:Address.postalCode @<string>?;     # Postal code for area
    fhir:Address.country @<string>?;        # Country (can be ISO 3166 3 letter 
                                            # code) 
    fhir:Address.period @<Period>?;         # Time period when address was/is in 
                                            # use 
    fhir:index xsd:integer?                 # Relative position in a list
}

# Content in a format defined elsewhere
<Attachment> CLOSED {
    fhir:Element.id @<string>?;             # xml:id (or equivalent in JSON)
    fhir:extension @<Extension>*;           # Additional Content defined by 
                                            # implementations 
    fhir:Attachment.contentType @<code>?;   # Mime type of the content, with 
                                            # charset etc. 
    fhir:Attachment.language @<code>?;      # Human language of the content 
                                            # (BCP-47) 
    fhir:Attachment.data @<base64Binary>?;  # Data inline, base64ed
    fhir:Attachment.url @<uri>?;            # Uri where the data can be found
    fhir:Attachment.size @<unsignedInt>?;   # Number of bytes of content (if url 
                                            # provided) 
    fhir:Attachment.hash @<base64Binary>?;  # Hash of the data (sha-1, base64ed)
    fhir:Attachment.title @<string>?;       # Label to display in place of the 
                                            # data 
    fhir:Attachment.creation @<dateTime>?;  # Date attachment was first created
    fhir:index xsd:integer?                 # Relative position in a list
}

# Primitive Type integer
<integer> CLOSED {
    fhir:Element.id @<id>?;                 # xml:id (or equivalent in JSON)
    fhir:extension @<Extension>*;           # Additional Content defined by 
                                            # implementations 
    fhir:value xsd:int MININCLUSIVE "-2147483648"^^xsd:int MAXINCLUSIVE "2147483647"^^xsd:int?;  # Primitive value for integer
    fhir:index xsd:integer?                 # Relative position in a list
}

# Primitive Type oid
<oid> CLOSED {
    fhir:extension @<Extension>*;           # Additional Content defined by 
                                            # implementations 
    fhir:value xsd:string?;                 # Primitive value for oid
    fhir:index xsd:integer?                 # Relative position in a list
}

# A measured or measurable amount
<Count> CLOSED {
    fhir:Element.id @<string>?;             # xml:id (or equivalent in JSON)
    fhir:extension @<Extension>*;           # Additional Content defined by 
                                            # implementations 
    fhir:Quantity.value @<decimal>?;        # Numerical value (with implicit 
                                            # precision) 
    fhir:Quantity.comparator @<code> AND
    	{fhir:value @fhirvs:quantity-comparator}?;  # < | <= | >= | > - how to 
                                            # understand the value 
    fhir:Quantity.unit @<string>?;          # Unit representation
    fhir:Quantity.system @<uri>?;           # System that defines coded unit form
    fhir:Quantity.code @<code>?;            # Coded form of the unit
    fhir:index xsd:integer?                 # Relative position in a list
}

# Primitive Type instant
<instant> CLOSED {
    fhir:Element.id @<id>?;                 # xml:id (or equivalent in JSON)
    fhir:extension @<Extension>*;           # Additional Content defined by 
                                            # implementations 
    fhir:value xsd:dateTime?;               # Primitive value for instant
    fhir:index xsd:integer?                 # Relative position in a list
}

# Details of a Technology mediated contact point (phone, fax, email, etc.)
<ContactPoint> CLOSED {
    fhir:Element.id @<string>?;             # xml:id (or equivalent in JSON)
    fhir:extension @<Extension>*;           # Additional Content defined by 
                                            # implementations 
    fhir:ContactPoint.system @<code> AND
    	{fhir:value @fhirvs:contact-point-system}?;  # phone | fax | email | pager | other
    fhir:ContactPoint.value @<string>?;     # The actual contact point details
    fhir:ContactPoint.use @<code> AND
    	{fhir:value @fhirvs:contact-point-use}?;  # home | work | temp | old | mobile 
                                            # - purpose of this contact point 
    fhir:ContactPoint.rank @<positiveInt>?;  # Specify preferred order of use (1 
                                            # = highest) 
    fhir:ContactPoint.period @<Period>?;    # Time period when the contact point 
                                            # was/is in use 
    fhir:index xsd:integer?                 # Relative position in a list
}

# Name of a human - parts and usage
<HumanName> CLOSED {
    fhir:Element.id @<string>?;             # xml:id (or equivalent in JSON)
    fhir:extension @<Extension>*;           # Additional Content defined by 
                                            # implementations 
    fhir:HumanName.use @<code> AND
    	{fhir:value @fhirvs:name-use}?;  # usual | official | temp | nickname 
                                            # | anonymous | old | maiden 
    fhir:HumanName.text @<string>?;         # Text representation of the full 
                                            # name 
    fhir:HumanName.family @<string>*;       # Family name (often called 
                                            # 'Surname') 
    fhir:HumanName.given @<string>*;        # Given names (not always 'first'). 
                                            # Includes middle names 
    fhir:HumanName.prefix @<string>*;       # Parts that come before the name
    fhir:HumanName.suffix @<string>*;       # Parts that come after the name
    fhir:HumanName.period @<Period>?;       # Time period when name was/is in use
    fhir:index xsd:integer?                 # Relative position in a list
}

# An amount of economic utility in some recognised currency
<Money> CLOSED {
    fhir:Element.id @<string>?;             # xml:id (or equivalent in JSON)
    fhir:extension @<Extension>*;           # Additional Content defined by 
                                            # implementations 
    fhir:Quantity.value @<decimal>?;        # Numerical value (with implicit 
                                            # precision) 
    fhir:Quantity.comparator @<code> AND
    	{fhir:value @fhirvs:quantity-comparator}?;  # < | <= | >= | > - how to 
                                            # understand the value 
    fhir:Quantity.unit @<string>?;          # Unit representation
    fhir:Quantity.system @<uri>?;           # System that defines coded unit form
    fhir:Quantity.code @<code>?;            # Coded form of the unit
    fhir:index xsd:integer?                 # Relative position in a list
}

# A series of measurements taken by a device
<SampledData> CLOSED {
    fhir:Element.id @<string>?;             # xml:id (or equivalent in JSON)
    fhir:extension @<Extension>*;           # Additional Content defined by 
                                            # implementations 
    fhir:SampledData.origin @<SimpleQuantity>;  # Zero value and units
    fhir:SampledData.period @<decimal>;     # Number of milliseconds between 
                                            # samples 
    fhir:SampledData.factor @<decimal>?;    # Multiply data by this before 
                                            # adding to origin 
    fhir:SampledData.lowerLimit @<decimal>?;  # Lower limit of detection
    fhir:SampledData.upperLimit @<decimal>?;  # Upper limit of detection
    fhir:SampledData.dimensions @<positiveInt>;  # Number of sample points at each 
                                            # time point 
    fhir:SampledData.data @<string>;        # Decimal values with spaces, or "E" 
                                            # | "U" | "L" 
    fhir:index xsd:integer?                 # Relative position in a list
}

# A ratio of two Quantity values - a numerator and a denominator
<Ratio> CLOSED {
    fhir:Element.id @<string>?;             # xml:id (or equivalent in JSON)
    fhir:extension @<Extension>*;           # Additional Content defined by 
                                            # implementations 
    fhir:Ratio.numerator @<Quantity>?;      # Numerator value
    fhir:Ratio.denominator @<Quantity>?;    # Denominator value
    fhir:index xsd:integer?                 # Relative position in a list
}

# Primitive Type positiveInt
<positiveInt> CLOSED {
    fhir:extension @<Extension>*;           # Additional Content defined by 
                                            # implementations 
    fhir:value xsd:positiveInteger?;        # Primitive value for positiveInt
    fhir:index xsd:integer?                 # Relative position in a list
}

# A duration of time during which an organism (or a process) has existed
<Age> CLOSED {
    fhir:Element.id @<string>?;             # xml:id (or equivalent in JSON)
    fhir:extension @<Extension>*;           # Additional Content defined by 
                                            # implementations 
    fhir:Quantity.value @<decimal>?;        # Numerical value (with implicit 
                                            # precision) 
    fhir:Quantity.comparator @<code> AND
    	{fhir:value @fhirvs:quantity-comparator}?;  # < | <= | >= | > - how to 
                                            # understand the value 
    fhir:Quantity.unit @<string>?;          # Unit representation
    fhir:Quantity.system @<uri>?;           # System that defines coded unit form
    fhir:Quantity.code @<code>?;            # Coded form of the unit
    fhir:index xsd:integer?                 # Relative position in a list
}

# A length - a value with a unit that is a physical distance
<Distance> CLOSED {
    fhir:Element.id @<string>?;             # xml:id (or equivalent in JSON)
    fhir:extension @<Extension>*;           # Additional Content defined by 
                                            # implementations 
    fhir:Quantity.value @<decimal>?;        # Numerical value (with implicit 
                                            # precision) 
    fhir:Quantity.comparator @<code> AND
    	{fhir:value @fhirvs:quantity-comparator}?;  # < | <= | >= | > - how to 
                                            # understand the value 
    fhir:Quantity.unit @<string>?;          # Unit representation
    fhir:Quantity.system @<uri>?;           # System that defines coded unit form
    fhir:Quantity.code @<code>?;            # Coded form of the unit
    fhir:index xsd:integer?                 # Relative position in a list
}

# A reference from one resource to another
<Reference> CLOSED {
    fhir:link IRI?;
    fhir:Element.id @<string>?;             # xml:id (or equivalent in JSON)
    fhir:extension @<Extension>*;           # Additional Content defined by 
                                            # implementations 
    fhir:Reference.reference @<string>?;    # Literal reference, Relative, 
                                            # internal or absolute URL 
    fhir:Reference.identifier @<Identifier>?;  # Logical reference, when literal 
                                            # reference is not known 
    fhir:Reference.display @<string>?;      # Text alternative for the resource
    fhir:index xsd:integer?                 # Relative position in a list
}

# Time range defined by start and end date/time
<Period> CLOSED {
    fhir:Element.id @<string>?;             # xml:id (or equivalent in JSON)
    fhir:extension @<Extension>*;           # Additional Content defined by 
                                            # implementations 
    fhir:Period.start @<dateTime>?;         # Starting time with inclusive 
                                            # boundary 
    fhir:Period.end @<dateTime>?;           # End time with inclusive boundary, 
                                            # if not ongoing 
    fhir:index xsd:integer?                 # Relative position in a list
}

# A measured or measurable amount
<Quantity> CLOSED {
    fhir:Element.id @<string>?;             # xml:id (or equivalent in JSON)
    fhir:extension @<Extension>*;           # Additional Content defined by 
                                            # implementations 
    fhir:Quantity.value @<decimal>?;        # Numerical value (with implicit 
                                            # precision) 
    fhir:Quantity.comparator @<code> AND
    	{fhir:value @fhirvs:quantity-comparator}?;  # < | <= | >= | > - how to 
                                            # understand the value 
    fhir:Quantity.unit @<string>?;          # Unit representation
    fhir:Quantity.system @<uri>?;           # System that defines coded unit form
    fhir:Quantity.code @<code>?;            # Coded form of the unit
    fhir:index xsd:integer?                 # Relative position in a list
}

# A length of time
<Duration> CLOSED {
    fhir:Element.id @<string>?;             # xml:id (or equivalent in JSON)
    fhir:extension @<Extension>*;           # Additional Content defined by 
                                            # implementations 
    fhir:Quantity.value @<decimal>?;        # Numerical value (with implicit 
                                            # precision) 
    fhir:Quantity.comparator @<code> AND
    	{fhir:value @fhirvs:quantity-comparator}?;  # < | <= | >= | > - how to 
                                            # understand the value 
    fhir:Quantity.unit @<string>?;          # Unit representation
    fhir:Quantity.system @<uri>?;           # System that defines coded unit form
    fhir:Quantity.code @<code>?;            # Coded form of the unit
    fhir:index xsd:integer?                 # Relative position in a list
}

# Set of values bounded by low and high
<Range> CLOSED {
    fhir:Element.id @<string>?;             # xml:id (or equivalent in JSON)
    fhir:extension @<Extension>*;           # Additional Content defined by 
                                            # implementations 
    fhir:Range.low @<SimpleQuantity>?;      # Low limit
    fhir:Range.high @<SimpleQuantity>?;     # High limit
    fhir:index xsd:integer?                 # Relative position in a list
}

# Text node with attribution
<Annotation> CLOSED {
    fhir:Element.id @<string>?;             # xml:id (or equivalent in JSON)
    fhir:extension @<Extension>*;           # Additional Content defined by 
                                            # implementations 
    (                                       # Individual responsible for the 
                                            # annotation 
        fhir:Annotation.authorReference @<Reference>  |
        fhir:Annotation.authorReference @<Reference>  |
        fhir:Annotation.authorReference @<Reference>  |
        fhir:Annotation.authorString @<string> 
    )?;
    fhir:Annotation.time @<dateTime>?;      # When the annotation was made
    fhir:Annotation.text @<string>;         # The annotation  - text content
    fhir:index xsd:integer?                 # Relative position in a list
}

# Primitive Type base64Binary
<base64Binary> CLOSED {
    fhir:Element.id @<id>?;                 # xml:id (or equivalent in JSON)
    fhir:extension @<Extension>*;           # Additional Content defined by 
                                            # implementations 
    fhir:value xsd:base64Binary?;           # Primitive value for base64Binary
    fhir:index xsd:integer?                 # Relative position in a list
}

# A digital Signature - XML DigSig, JWT, Graphical image of signature, etc.
<Signature> CLOSED {
    fhir:Element.id @<string>?;             # xml:id (or equivalent in JSON)
    fhir:extension @<Extension>*;           # Additional Content defined by 
                                            # implementations 
    fhir:Signature.type @<Coding>+;         # Indication of the reason the 
                                            # entity signed the object(s) 
    fhir:Signature.when @<instant>;         # When the signature was created
    (                                       # Who signed
        fhir:Signature.whoUri @<uri>  |
        fhir:Signature.whoReference @<Reference>  |
        fhir:Signature.whoReference @<Reference>  |
        fhir:Signature.whoReference @<Reference>  |
        fhir:Signature.whoReference @<Reference>  |
        fhir:Signature.whoReference @<Reference> 
    );
    (                                       # The party represented
        fhir:Signature.onBehalfOfUri @<uri>  |
        fhir:Signature.onBehalfOfReference @<Reference>  |
        fhir:Signature.onBehalfOfReference @<Reference>  |
        fhir:Signature.onBehalfOfReference @<Reference>  |
        fhir:Signature.onBehalfOfReference @<Reference>  |
        fhir:Signature.onBehalfOfReference @<Reference> 
    )?;
    fhir:Signature.contentType @<code>?;    # The technical format of the 
                                            # signature 
    fhir:Signature.blob @<base64Binary>?;   # The actual signature content (XML 
                                            # DigSig. JWT, picture, etc.) 
    fhir:index xsd:integer?                 # Relative position in a list
}

# Primitive Type unsignedInt
<unsignedInt> CLOSED {
    fhir:extension @<Extension>*;           # Additional Content defined by 
                                            # implementations 
    fhir:value xsd:nonNegativeInteger?;     # Primitive value for unsignedInt
    fhir:index xsd:integer?                 # Relative position in a list
}

# Primitive Type time
<time> CLOSED {
    fhir:Element.id @<id>?;                 # xml:id (or equivalent in JSON)
    fhir:extension @<Extension>*;           # Additional Content defined by 
                                            # implementations 
    fhir:value xsd:time?;                   # Primitive value for time
    fhir:index xsd:integer?                 # Relative position in a list
}

# A timing schedule that specifies an event that may occur multiple times
<Timing> CLOSED {
    fhir:Element.id @<string>?;             # xml:id (or equivalent in JSON)
    fhir:extension @<Extension>*;           # Additional Content defined by 
                                            # implementations 
    fhir:Timing.event @<dateTime>*;         # When the event occurs
    fhir:Timing.repeat @<Timing.repeat>?;   # When the event is to occur
    fhir:Timing.code @<CodeableConcept>?;   # BID | TID | QID | AM | PM | QD | 
                                            # QOD | Q4H | Q6H + 
    fhir:index xsd:integer?                 # Relative position in a list
}

# Primitive Type decimal
<decimal> CLOSED {
    fhir:Element.id @<id>?;                 # xml:id (or equivalent in JSON)
    fhir:extension @<Extension>*;           # Additional Content defined by 
                                            # implementations 
    fhir:value xsd:decimal?;                # Primitive value for decimal
    fhir:index xsd:integer?                 # Relative position in a list
}

# A fixed quantity (no comparator)
<SimpleQuantity> CLOSED {
    fhir:Element.id @<string>?;             # xml:id (or equivalent in JSON)
    fhir:extension @<Extension>*;           # Additional Content defined by 
                                            # implementations 
    fhir:Quantity.value @<decimal>?;        # Numerical value (with implicit 
                                            # precision) 
    fhir:Quantity.unit @<string>?;          # Unit representation
    fhir:Quantity.system @<uri>?;           # System that defines coded unit form
    fhir:Quantity.code @<code>?;            # Coded form of the unit
    fhir:index xsd:integer?                 # Relative position in a list
}

# Condition that must evaluate to true
<ElementDefinition.constraint> CLOSED {
    fhir:Element.id @<string>?;             # xml:id (or equivalent in JSON)
    fhir:extension @<Extension>*;           # Additional Content defined by 
                                            # implementations 
    fhir:ElementDefinition.constraint.key @<id>;  # Target of 'condition' reference 
                                            # above 
    fhir:ElementDefinition.constraint.requirements @<string>?;  # Why this constraint is necessary 
                                            # or appropriate 
    fhir:ElementDefinition.constraint.severity @<code> AND
    	{fhir:value @fhirvs:constraint-severity};  # error | warning
    fhir:ElementDefinition.constraint.human @<string>;  # Human description of constraint
    fhir:ElementDefinition.constraint.expression @<string>;  # FluentPath expression of constraint
    fhir:ElementDefinition.constraint.xpath @<string>?;  # XPath expression of constraint
    fhir:ElementDefinition.constraint.source @<uri>?;  # Reference to original source of 
                                            # constraint 
    fhir:index xsd:integer?                 # Relative position in a list
}

# Data type and Profile for this element
<ElementDefinition.type> CLOSED {
    fhir:Element.id @<string>?;             # xml:id (or equivalent in JSON)
    fhir:extension @<Extension>*;           # Additional Content defined by 
                                            # implementations 
    fhir:ElementDefinition.type.code @<uri>;  # Data type or Resource (reference 
                                            # to definition) 
    fhir:ElementDefinition.type.profile @<uri>?;  # Profile (StructureDefinition) to 
                                            # apply (or IG) 
    fhir:ElementDefinition.type.targetProfile @<uri>?;  # Profile (StructureDefinition) to 
                                            # apply to reference target (or IG) 
    fhir:ElementDefinition.type.aggregation @<code> AND
    	{fhir:value @fhirvs:resource-aggregation-mode}*;  # contained | referenced | bundled - 
                                            # how aggregated 
    fhir:ElementDefinition.type.versioning @<code> AND
    	{fhir:value @fhirvs:reference-version-rules}?;  # either | independent | specific
    fhir:index xsd:integer?                 # Relative position in a list
}

# This element is sliced - slices follow
<ElementDefinition.slicing> CLOSED {
    fhir:Element.id @<string>?;             # xml:id (or equivalent in JSON)
    fhir:extension @<Extension>*;           # Additional Content defined by 
                                            # implementations 
    fhir:ElementDefinition.slicing.discriminator @<string>*;  # Element values that are used to 
                                            # distinguish the slices 
    fhir:ElementDefinition.slicing.description @<string>?;  # Text description of how slicing 
                                            # works (or not) 
    fhir:ElementDefinition.slicing.ordered @<boolean>?;  # If elements must be in same order 
                                            # as slices 
    fhir:ElementDefinition.slicing.rules @<code> AND
    	{fhir:value @fhirvs:resource-slicing-rules};  # closed | open | openAtEnd
    fhir:index xsd:integer?                 # Relative position in a list
}

# Map element to another set of definitions
<ElementDefinition.mapping> CLOSED {
    fhir:Element.id @<string>?;             # xml:id (or equivalent in JSON)
    fhir:extension @<Extension>*;           # Additional Content defined by 
                                            # implementations 
    fhir:ElementDefinition.mapping.identity @<id>;  # Reference to mapping declaration
    fhir:ElementDefinition.mapping.language @<code>?;  # Computable language of mapping
    fhir:ElementDefinition.mapping.map @<string>;  # Details of the mapping
    fhir:index xsd:integer?                 # Relative position in a list
}

# Base definition information for tools
<ElementDefinition.base> CLOSED {
    fhir:Element.id @<string>?;             # xml:id (or equivalent in JSON)
    fhir:extension @<Extension>*;           # Additional Content defined by 
                                            # implementations 
    fhir:ElementDefinition.base.path @<string>;  # Path that identifies the base 
                                            # element 
    fhir:ElementDefinition.base.min @<integer>;  # Min cardinality of the base element
    fhir:ElementDefinition.base.max @<string>;  # Max cardinality of the base element
    fhir:index xsd:integer?                 # Relative position in a list
}

# When the event is to occur
<Timing.repeat> CLOSED {
    fhir:Element.id @<string>?;             # xml:id (or equivalent in JSON)
    fhir:extension @<Extension>*;           # Additional Content defined by 
                                            # implementations 
    (                                       # Length/Range of lengths, or (Start 
                                            # and/or end) limits 
        fhir:Timing.repeat.boundsDuration @<Duration>  |
        fhir:Timing.repeat.boundsRange @<Range>  |
        fhir:Timing.repeat.boundsPeriod @<Period> 
    )?;
    fhir:Timing.repeat.count @<integer>?;   # Number of times to repeat
    fhir:Timing.repeat.countMax @<integer>?;  # Maximum number of times to repeat
    fhir:Timing.repeat.duration @<decimal>?;  # How long when it happens
    fhir:Timing.repeat.durationMax @<decimal>?;  # How long when it happens (Max)
    fhir:Timing.repeat.durationUnit @<code> AND
    	{fhir:value @fhirvs:units-of-time}?;  # s | min | h | d | wk | mo | a - 
                                            # unit of time (UCUM) 
    fhir:Timing.repeat.frequency @<integer>?;  # Event occurs frequency times per 
                                            # period 
    fhir:Timing.repeat.frequencyMax @<integer>?;  # Event occurs up to frequencyMax 
                                            # times per period 
    fhir:Timing.repeat.period @<decimal>?;  # Event occurs frequency times per 
                                            # period 
    fhir:Timing.repeat.periodMax @<decimal>?;  # Upper limit of period (3-4 hours)
    fhir:Timing.repeat.periodUnit @<code> AND
    	{fhir:value @fhirvs:units-of-time}?;  # s | min | h | d | wk | mo | a - 
                                            # unit of time (UCUM) 
    fhir:Timing.repeat.when @<code> AND
    	{fhir:value @fhirvs:event-timing}?;  # Regular life events the event is 
                                            # tied to 
    fhir:Timing.repeat.offset @<unsignedInt>?;  # Minutes from event (before or 
                                            # after) 
    fhir:index xsd:integer?                 # Relative position in a list
}

# ValueSet details if this is coded
<ElementDefinition.binding> CLOSED {
    fhir:Element.id @<string>?;             # xml:id (or equivalent in JSON)
    fhir:extension @<Extension>*;           # Additional Content defined by 
                                            # implementations 
    fhir:ElementDefinition.binding.strength @<code> AND
    	{fhir:value @fhirvs:binding-strength};  # required | extensible | preferred 
                                            # | example 
    fhir:ElementDefinition.binding.description @<string>?;  # Human explanation of the value set
    (                                       # Source of value set
        fhir:ElementDefinition.binding.valueSetUri @<uri>  |
        fhir:ElementDefinition.binding.valueSetReference @<Reference> 
    )?;
    fhir:index xsd:integer?                 # Relative position in a list
}

#---------------------- Reference Types -------------------

#---------------------- Value Sets ------------------------

# The use of a human name
fhirvs:name-use ["usual" "official" "temp" "nickname" "anonymous" "old" "maiden"]

# The type of an address (physical / postal)
fhirvs:address-type ["postal" "physical" "both"]

# Defines the type of structure that a definition is describing.
fhirvs:structure-definition-kind ["primitive-type" "complex-type" "resource" "logical"]

# Whether a reference needs to be version specific or version independent, or whetehr either can be used
fhirvs:reference-version-rules ["either" "independent" "specific"]

# How a property is represented on the wire.
fhirvs:property-representation ["xmlAttr" "xmlText" "typeAttr" "cdaText" "xhtml"]

# Indication of the degree of conformance expectations associated with a binding.
fhirvs:binding-strength ["required" "extensible" "preferred" "example"]

# How a type relates to it's baseDefinition.
fhirvs:type-derivation-rule ["specialization" "constraint"]

# SHALL applications comply with this constraint?
fhirvs:constraint-severity ["error" "warning"]

# How resource references can be aggregated.
fhirvs:resource-aggregation-mode ["contained" "referenced" "bundled"]

# Identifies the purpose for this identifier, if known .
fhirvs:identifier-use ["usual" "official" "temp" "secondary"]

# How the Quantity should be understood and represented.
fhirvs:quantity-comparator ["<" "<=" ">=" ">"]

# The status of a resource narrative
fhirvs:narrative-status ["generated" "extensions" "additional" "empty"]

# The lifecycle status of a Value Set or Concept Map.
fhirvs:publication-status ["draft" "active" "retired"]

# How an extension context is interpreted.
fhirvs:extension-context ["resource" "datatype" "extension"]

# The use of an address
fhirvs:address-use ["home" "work" "temp" "old"]

# How slices are interpreted when evaluating an instance.
fhirvs:resource-slicing-rules ["closed" "open" "openAtEnd"]

# Use of contact point
fhirvs:contact-point-use ["home" "work" "temp" "old" "mobile"]

# Real world event that the relating to the schedule.
fhirvs:event-timing ["HS" "WAKE" "C" "CM" "CD" "CV" "AC" "ACM" "ACD" "ACV" "PC" "PCM" "PCD" "PCV"]

# Telecommunications form for contact point
fhirvs:contact-point-system ["phone" "fax" "email" "pager" "other"]

# A unit of time (units from UCUM).
fhirvs:units-of-time ["s" "min" "h" "d" "wk" "mo" "a"]
